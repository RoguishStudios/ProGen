name: Continuous Integration

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build on (${{ matrix.os }} ${{ matrix.rust }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macOS-latest ]
        rust: [ stable, beta, nightly ]
    env:
      RUST_BACKTRACE: full
      CI: 'True'
      RUSTFLAGS: '-D warnings'
    steps:
      - name: Check out Source
        uses: actions/checkout@v2
      - name: Setup Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Build Library
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: Test Library
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release
      - name: Build & Test Rust Docs
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --release
      - name: Prepare Rust Docs
        run: echo "<meta http-equiv=\"refresh\" content=\"0; url=progen\">" > target/doc/index.html
        if: matrix.os == 'ubuntu-latest'
      - name: Upload Pages Artifact
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-pages-artifact@main
        with:
          path: './target/doc'

  deploy:
    # Add a dependency to the build job
    needs: build
    runs-on: ubuntu-latest

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Prepare Rust Docs and Upload
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1